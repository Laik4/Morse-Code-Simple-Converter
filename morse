#!/usr/bin/env python3
import sys
import re
from os import path

alp = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890,.?/-()'
morse = [
    '.-',
    '-...',
    '-.-.',
    '-..',
    '.',
    '..-.',
    '--.',
    '....',
    '..',
    '.---',
    '-.-',
    '.-..',
    '--',
    '-.',
    '---',
    '.--.',
    '--.-',
    '.-.',
    '...',
    '-',
    '..-',
    '...-',
    '.--',
    '-..-',
    '-.--',
    '--..',
    '.----',
    '..---',
    '...--',
    '....-',
    '.....',
    '-....',
    '--...',
    '---..',
    '----.',
    '-----',
    '--..--',
    '.-.-.-',
    '..--..',
    '-..-.',
    '-....-',
    '-.--.',
    '-.--.-',
]

def encode(message):
    morsecode = dict(zip(alp, morse))
    available_e = set(alp)
    encoded = ''
    for letter in message:
        if letter in available_e:
            encoded += morsecode[letter] + ' '
        elif letter == ' ':
            encoded += letter
        else:
            encoded += '*'

    return encoded

def decode(encoded):
    morsecode = dict(zip(morse, alp))
    available_d = set(morse)
    encoded = encoded.split()
    decoded = ''
    for patt in encoded:
        if patt in available_d:
            decoded += morsecode[patt]
        else:
            decoded += '*'
    return decoded

def fileopen(filename):
    if not path.isfile(filename):
        print('No such file or directory: \'{}\''.format(filename))
        exit(0)
    else:
        with open(filename, 'r') as f:
            s = f.read()
            return s

def get_option(args):
    res = []
    for arg in args:
        if(re.match(r'\-\w', arg)):
            res.append(arg)
    return set(res)


if __name__ == '__main__':
    args = sys.argv

    option = get_option(args)

    if len(args) == 1:
        # echo xxx | morse
        s = input()

    elif re.match(r'\-\w', args[-1]):
        # echo xxx | morse -d
        s = input()

    else:
        # morse xxx.txt
        s = fileopen(args[-1])

    s = s.upper()

    if '-d' in option:
        print(decode(s))
    else:
        print(encode(s))
